version: '3.8'

services:
  eb-due-frontend:
    build:
      context: .
      dockerfile: Dockerfile.frontend
    container_name: eb-due-frontend
    ports:
      - "3000:3000"
    environment:
      - NODE_ENV=production
      - VITE_API_URL=${VITE_API_URL:-http://eb-due-backend:3001}
      - VITE_APP_TITLE=EB-Due
    restart: unless-stopped
    networks:
      - eb-due-network
    depends_on:
      - eb-due-backend
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3000"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  eb-due-backend:
    build:
      context: ./backend
      dockerfile: Dockerfile.coolify
    container_name: eb-due-backend
    ports:
      - "3001:3001"
    environment:
      - NODE_ENV=production
      - PORT=3001
      - DATABASE_URL=${DATABASE_URL}
      - JWT_SECRET=${JWT_SECRET}
      - CORS_ORIGIN=${CORS_ORIGIN}
    restart: unless-stopped
    networks:
      - eb-due-network
    volumes:
      - ./backend/data:/app/data
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:3001/api/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: eb-due-postgres
    environment:
      - POSTGRES_DB=${POSTGRES_DB:-eb_due_db}
      - POSTGRES_USER=${POSTGRES_USER:-eb_due_user}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD:-eb_due_secure_password_2024}
    volumes:
      - postgres_data:/var/lib/postgresql/data
    restart: unless-stopped
    networks:
      - eb-due-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${POSTGRES_USER:-eb_due_user} -d ${POSTGRES_DB:-eb_due_db} || exit 1"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

volumes:
  postgres_data:
    driver: local

networks:
  eb-due-network:
    driver: bridge 