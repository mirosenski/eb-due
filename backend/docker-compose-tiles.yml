version: '3.8'

services:
  # PostgreSQL with PostGIS for routing and data storage
  postgres:
    image: postgis/postgis:15-3.3
    container_name: eb-due-postgres
    environment:
      POSTGRES_DB: eb-due
      POSTGRES_USER: eb-due
      POSTGRES_PASSWORD: eb-due123
      PGDATA: /var/lib/postgresql/data/pgdata
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./data/bw-data.osm.pbf:/data/bw-data.osm.pbf:ro
    ports:
      - "5432:5432"
    networks:
      - eb-due-network
    restart: unless-stopped

  # TileServer GL for serving offline map tiles
  tileserver:
    image: maptiler/tileserver-gl:latest
    container_name: eb-due-tileserver
    volumes:
      - ./tiles:/data
      - ./config/tileserver-config.json:/data/config.json:ro
    ports:
      - "8080:8080"
    environment:
      - MBTILES_FILE=/data/baden-wuerttemberg.mbtiles
    networks:
      - eb-due-network
    depends_on:
      - postgres
    restart: unless-stopped

  # OSRM Backend for routing
  osrm:
    image: osrm/osrm-backend:latest
    container_name: eb-due-osrm
    volumes:
      - ./data:/data
    ports:
      - "5000:5000"
    command: >
      sh -c "
      if [ ! -f /data/bw-data.osrm ]; then
        osrm-extract -p /opt/car.lua /data/bw-data.osm.pbf &&
        osrm-partition /data/bw-data.osrm &&
        osrm-customize /data/bw-data.osrm
      fi &&
      osrm-routed --algorithm mld /data/bw-data.osrm --max-table-size 10000
      "
    networks:
      - eb-due-network
    depends_on:
      - postgres
    restart: unless-stopped

  # Alternative: Valhalla for more advanced routing
  valhalla:
    image: valhalla/valhalla:latest
    container_name: eb-due-valhalla
    volumes:
      - ./data:/data
      - ./config/valhalla_tiles:/valhalla_tiles
    ports:
      - "8002:8002"
    environment:
      - DATA_FOLDER=/data
      - TILES_FOLDER=/valhalla_tiles
    networks:
      - eb-due-network
    command: >
      sh -c "
        valhalla_build_config --mjolnir-tile-dir /data/valhalla_tiles > /data/valhalla.json &&
        valhalla_service /data/valhalla.json 1
      "
    depends_on:
      - postgres
    restart: unless-stopped

  # Nominatim for geocoding (offline)
  nominatim:
    image: mediagis/nominatim:4.2
    container_name: eb-due-nominatim
    environment:
      PBF_URL: file:///data/bw-data.osm.pbf
      REPLICATION_URL: ""
      IMPORT_WIKIPEDIA: "false"
      IMPORT_US_POSTCODES: "false"
      IMPORT_GB_POSTCODES: "false"
      THREADS: 4
    volumes:
      - nominatim_data:/var/lib/postgresql/14/main
      - ./data/bw-data.osm.pbf:/data/bw-data.osm.pbf:ro
    ports:
      - "8001:8080"
    networks:
      - eb-due-network
    restart: unless-stopped

  # Redis for caching
  redis:
    image: redis:7-alpine
    container_name: eb-due-redis
    ports:
      - "6379:6379"
    volumes:
      - redis_data:/data
    networks:
      - eb-due-network
    restart: unless-stopped

  # Our main backend API
  api:
    build: .
    container_name: eb-due-api
    ports:
      - "3000:3000"
    environment:
      - DATABASE_URL=postgresql://eb-due:eb-due123@postgres:5432/eb-due
      - REDIS_URL=redis://redis:6379
      - OSRM_URL=http://osrm:5000
      - VALHALLA_URL=http://valhalla:8002
      - NOMINATIM_URL=http://nominatim:8080
      - TILESERVER_URL=http://tileserver:8080
    depends_on:
      - postgres
      - redis
      - osrm
      - valhalla
      - nominatim
      - tileserver
    networks:
      - eb-due-network
    restart: unless-stopped

volumes:
  postgres_data:
  nominatim_data:
  redis_data:

networks:
  eb-due-network:
    driver: bridge
